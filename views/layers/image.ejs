<% function getStyles (settings) {
  let styles = ''
  if (settings) {
    if (settings.margin && !layer.settings.layerSettings.fullscreen) {
      if (['1', '3', '13', '15', '2', '5', '11', '14'].includes(settings.position)) {
        if (['1', '2', '3', '5'].includes(settings.position)) {
          styles += `top:${settings.margin}px;`;
        } else if (['11', '13', '14', '15'].includes(settings.position)) {
          styles += `top:${-settings.margin}px;`;
        }
      }
      if (['1', '4', '7', '10', '13'].includes(settings.position)) {
        styles += `left:${settings.margin}px;`;
      }
      if (['3', '6', '9', '12', '15'].includes(settings.position)) {
        styles += `right:${settings.margin}px;`;
      }
    }
    if (settings.opacity) {
      styles += `opacity:${settings.opacity / 100};`
    }
    styles += `z-index: ${layer.position}`
  }
  return styles
}

function getRotateValue(settings) {
  if (layer.settings.layerSettings.fullscreen) {
    var dist = Math.sqrt((Math.pow(ampStory.editorWidth, 2) || Math.pow(400, 2)) + (Math.pow(ampStory.editorHeight, 2) || Math.pow(711, 2)));
    var diagAngle = Math.asin((ampStory.editorHeight || 711) / dist);

    var a1 = (((settings.rotate * Math.PI / 180) % (Math.PI * 2)) + Math.PI * 4) % (Math.PI * 2);
    console.log('a1', a1)
    if (a1 > Math.PI) {
      a1 -= Math.PI;
    }
    if (a1 > Math.PI / 2 && a1 <= Math.PI) {
      a1 = (Math.PI / 2) - (a1 - (Math.PI / 2));
    }

    var ang1 = Math.PI / 2 - diagAngle - Math.abs(a1)
    var ang2 = Math.abs(diagAngle - Math.abs(a1))

    var scale1 = Math.cos(ang1) * dist / layer.settings.layerSettings.height
    var scale2 = Math.cos(ang2) * dist / layer.settings.layerSettings.width
    var scale = Math.max(scale1, scale2)
    return `transform: rotate(${settings.rotate}deg) scale(${scale});`
  } else {
    return `transform: rotate(${settings.rotate}deg);`
  }
}

function animationHeight(layer) {
  return Math.abs((+layer.settings.layerSettings.width) * Math.sin(Radians(+layer.settings.generalSettings.rotate))) +
          Math.abs((+layer.settings.layerSettings.height) * Math.cos(Radians(+layer.settings.generalSettings.rotate)))
}

function animationWidth(layer) {
  return Math.abs((+layer.settings.layerSettings.width) * Math.cos(Radians(+layer.settings.generalSettings.rotate))) +
          Math.abs((+layer.settings.layerSettings.height) * Math.sin(Radians(+layer.settings.generalSettings.rotate)))
}

function Radians(deg) {
  return deg * (Math.PI / 180)
}

function getImageUrl (content) {
  console.log('content', content)
  if (layer.type === 'video') {
    if (content.thumbnail !== '') {
      console.log('thumbnail')
      return content.thumbnail || content.image.thumbnail
    } else if (content.image.thumbnail) {
      return content.image.thumbnail || ''
    } else {
      return ''
    }
  } else {
    return content.value || ''
  }
}
if (layer.settings.layerSettings.fullscreen) { %>
  <amp-img
          src="<%= getImageUrl(layer.content) %>"
          width="<%= layer.settings.layerSettings.width %>px"
          height="<%= layer.settings.layerSettings.height %>px"
          class=""
          layout="fixed"
          alt="an image"
          style="width:100%;height:100%;object-fit:fill;position: static;">
  </amp-img>
<% } else { %>
  <amp-img
          class="small-image"
          src="<%= getImageUrl(layer.content) %>"
          width="<%= layer.settings.layerSettings.width %>"
          height="<%= layer.settings.layerSettings.height %>"
          layout="fixed"
          alt="an image"
  <% if (layer.settings.generalSettings.shadow !== '0') { %>
          style="filter: drop-shadow(0px 0px <%= layer.settings.generalSettings.shadow %>px rgba(0,0,0,0.75));position: initial;"
  <% } else { %>
          style="position: initial;"
          <% } %>
  ></amp-img>
<% } %>
